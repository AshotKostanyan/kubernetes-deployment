apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
spec:
  replicas: {{ .Values.app.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
    spec:
      containers:
        - name: {{ .Values.app.name }}
          image: {{ .Values.app.image }}
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.env.dbHost.configMap }}
                  key: {{ .Values.env.dbHost.key }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.dbUser.secret }}
                  key: {{ .Values.env.dbUser.key }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.dbPassword.secret }}
                  key: {{ .Values.env.dbPassword.key }}
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.dbName.secret }}
                  key: {{ .Values.env.dbName.key }}
          ports:
            - containerPort: {{ .Values.app.port }}
      initContainers:
        - name: {{ .Values.initContainer.name }}
          image: {{ .Values.app.image }}
          command: ["node", "migrate.js"]
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.env.dbHost.configMap }}
                  key: {{ .Values.env.dbHost.key }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.dbUser.secret }}
                  key: {{ .Values.env.dbUser.key }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.dbPassword.secret }}
                  key: {{ .Values.env.dbPassword.key }}
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.dbName.secret }}
                  key: {{ .Values.env.dbName.key }}


---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.service.name }}
spec:
  selector:
    app: {{ .Values.app.name }}
  type: {{ .Values.service.type }}
  ports:
    - protocol: TCP
      port: {{ .Values.service.port }}
      targetPort: {{ .Values.app.port }}
