apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mysql.name }}
spec:
  replicas: {{ .Values.mysql.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.mysql.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.mysql.name }}
    spec:
      containers:
        - name: {{ .Values.mysql.name }}
          image: {{ .Values.mysql.image }}
          ports:
            - containerPort: {{ .Values.mysql.port }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mysql.secret.name }}
                  key: {{ .Values.mysql.secret.rootPasswordKey }}
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mysql.secret.name }}
                  key: {{ .Values.mysql.secret.dbNameKey }}
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
          livenessProbe:
            exec:
              command: ["mysqladmin", "ping", "-h", "127.0.0.1"]
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command: ["mysqladmin", "ping", "-h", "127.0.0.1"]
            initialDelaySeconds: 10
            periodSeconds: 5
      volumes:
        - name: mysql-storage
          emptyDir: {}
